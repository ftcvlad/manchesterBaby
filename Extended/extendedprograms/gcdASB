;This program finds the greatest common divisor of NUM1 and NUM2, defined at the bottom.

%MACRO DIVIDE 4; PARAM1: DIVIDEND, PARAM2: DIVISOR, PARAM3: QUOTIENT PARAM4: THIS LAST PARAMETER IS THE LABEL OF THE LINE IN WHICH THIS MACRO IS BEING CALLED
	ADD_ONE %3		;
	LOAD %1			;
	SUB %2			;
	STO %1			;
	CMP			;
	JLP %4			;
	SUBTRACT_ONE %3		;
	LOAD %3			;
%ENDMACRO

%MACRO MULTIPLY 4; PARAM1: NUMBER TO BE MULTIPLIED, PARAM2: COEFFICIENT, PARAM3: RESULT PARAM4: THIS LAST PARAMETER IS THE LABEL OF THE LINE IN WHICH THIS MACRO IS BEING CALLED
	LOAD %3	;
	ADD %1	;
	STO %3 	;
	LOAD %2	; LOAD COEFFICIENT
	SUB #1	;
	STO %2	;
	CMP	; if the coefficient is 0, we're done. result is %3 - %1. If not, jump back to start of multiplication
	JLP %4	;
	LOAD %3	;
	SUB %1	;
	STO %3	;
	ADD %1	;
%ENDMACRO

%MACRO COPY 3; FIRST PARAM: STORE ADDRESS TO COPY FROM, 2ND PARAM: STORE ADDRESS TO COPY INTO, 3RD PARAM: TEMPORARY VARIABLE TO HOLD PREVIOUS ACCUMULATOR VALUE
	STO %3	;
	LOAD %1	;
	STO %2	;
	LOAD %3	;
%ENDMACRO

%MACRO ADD_ONE 1;
	LOAD %1	;
	ADD #1	;
	STO %1	;
%ENDMACRO

%MACRO SUBTRACT_ONE 1;
	LOAD %1	;
	SUB #1	;
	STO %1	;
%ENDMACRO

VAR 0			;
START: 		COPY NUM1 DIVIDEND	TEMP			;
		COPY NUM2 DIVISOR	TEMP			;
		LOAD #0						;
		STO QUOTIENT					; RESET QUOTIENT TO ZERO. 
DIVSTART:	DIVIDE DIVIDEND DIVISOR QUOTIENT DIVSTART	;

;Division complete, now we have the quotient in QUOTIENT and divisor in DIVISOR
;now multiply quotient by divisor to see if remainder is 0

		COPY DIVISOR NUMBER			TEMP		;
		COPY QUOTIENT COEFFICIENT		TEMP		;
		LOAD #0						;
		STO RESULT					; RESET RESULT TO ZERO. 

;We have copied the right values into the number and coefficient variables.
;We can now start multiplication of the Divisor and the Quotient.

MULSTART:	MULTIPLY NUMBER COEFFICIENT RESULT MULSTART	;

;Multiplication complete. Result in RESULT.

;NOW CHECK IF WE ARE DONE

		LOAD NUM1	; //Load the initial dividend (num1)
		SUB RESULT	; //Initial dividend - (quotient*divisor) = remainder

		;THE ACCUMULATOR HAS THE REMAINDER RIGHT NOW

		STO TEMP	; PUT REMAINDER IN TEMP
		LOAD DIVISOR	;
		STO GCD		; this might be the result, store in GCD. We will load it again if it is.
		STO NUM1	; MAKE THE DIVISOR THE NEW NUM1 (DIVIDEND)
		LOAD TEMP	; GET REMAINDER BACK IN THE ACCUMULATOR
		STO NUM2	; STORE REMAINDER AS THE NEW NUM2 (DIVISOR)
		SUB #1		; 
		CMP		; EXIT LOOP IF REMAINDER IS 0
		JLP START	; IF REMAINDER IS NOT ZERO YET, JUMP BACK TO THE DIVISION AT THE BEGINNING TO KEEP CARRYING OUT THE EUCLIDEAN ALGORITHM..
		LOAD GCD	; IF REMAINDER IS 0, LOAD GCD AND STOP EXECUTION.
END:	STP		;

NUM1:		VAR 1479; Answer should be 17.
NUM2:		VAR 272	;
DIVIDEND:	VAR 0	;
DIVISOR:	VAR 0	;
QUOTIENT:	VAR 0	;
TEMP:		VAR 0	;
NUMBER:		VAR 0	;
COEFFICIENT:	VAR 0	;
RESULT:		VAR 0	;
GCD:		VAR 0	;
